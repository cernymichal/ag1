#include <cassert>
#include <iostream>

#include "guard.cpp"

using TestCase = std::pair<uint64_t, TreeProblem>;

const std::vector<TestCase> BASIC_TESTS = {
    {3, {1, {1, 1, 1, 2}, {{0, 3}, {1, 3}, {2, 3}}}},
    {4, {1, {1, 1, 1, 4}, {{0, 3}, {1, 3}, {2, 3}}}},
    {57, {1, {
                 17,
                 11,
                 5,
                 13,
                 8,
                 12,
                 7,
                 4,
                 2,
                 8,
             },
          {
              {1, 4},
              {6, 1},
              {2, 1},
              {3, 8},
              {8, 0},
              {6, 0},
              {5, 6},
              {7, 2},
              {0, 9},
          }}},
    {85, {1, {
                 10,
                 16,
                 13,
                 4,
                 19,
                 8,
                 18,
                 17,
                 18,
                 19,
                 10,
             },
          {
              {9, 7},
              {9, 6},
              {10, 4},
              {4, 9},
              {7, 1},
              {0, 2},
              {9, 2},
              {3, 8},
              {2, 3},
              {5, 4},
          }}},
    {79, {1, {
                 8,
                 14,
                 11,
                 8,
                 1,
                 13,
                 9,
                 14,
                 15,
                 12,
                 1,
                 11,
             },
          {
              {9, 1},
              {1, 2},
              {1, 4},
              {5, 10},
              {7, 8},
              {3, 7},
              {11, 3},
              {11, 10},
              {6, 8},
              {0, 1},
              {0, 3},
          }}},
    {102, {1, {
                  15,
                  10,
                  18,
                  18,
                  3,
                  4,
                  18,
                  12,
                  6,
                  19,
                  9,
                  19,
                  10,
              },
           {
               {10, 2},
               {11, 10},
               {6, 3},
               {10, 8},
               {5, 3},
               {11, 1},
               {9, 5},
               {0, 4},
               {12, 3},
               {9, 7},
               {11, 9},
               {4, 12},
           }}},
    {93, {1, {
                 1,
                 7,
                 6,
                 18,
                 15,
                 2,
                 14,
                 15,
                 18,
                 8,
                 15,
                 1,
                 5,
                 6,
             },
          {
              {0, 13},
              {6, 12},
              {0, 12},
              {7, 8},
              {8, 3},
              {12, 11},
              {12, 1},
              {10, 12},
              {2, 6},
              {6, 9},
              {12, 7},
              {0, 4},
              {0, 5},
          }}},
};

const std::vector<TestCase> BONUS_TESTS = {
    {3, {2, {1, 1, 1, 2}, {{0, 3}, {1, 3}, {2, 3}}}},
    {5, {2, {1, 1, 1, 4}, {{0, 3}, {1, 3}, {2, 3}}}},
};

void test(const std::vector<TestCase>& T) {
    int i = 0;
    for (auto& [s, t] : T) {
        if (s != solve(t))
            std::cout << "Error in " << i << " (returned " << solve(t) << ")" << std::endl;
        i++;
    }
    std::cout << "Finished" << std::endl;
}

int main() {
    test(BASIC_TESTS);
    // test(BONUS_TESTS);

    std::cout << "All tests completed" << std::endl;
}
